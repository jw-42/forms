generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int            @id
  is_banned  Boolean        @default(false)
  created_at DateTime       @default(now())
  updated_at DateTime       @updatedAt
  sessions   Session[]
  forms      Form[]
  answers    AnswersGroup[]
}

model Session {
  id           BigInt   @id @default(autoincrement())
  user_id      Int
  access_token String   @unique
  expires_at   DateTime @default(dbgenerated("NOW() + INTERVAL '1 hour'"))
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  user         User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Form {
  id          String         @id @default(uuid())
  title       String
  description String
  owner_id    Int
  owner       User           @relation(fields: [owner_id], references: [id], onDelete: Cascade)
  created_at  DateTime       @default(now())
  updated_at  DateTime       @updatedAt
  questions   Question[]
  answers     AnswersGroup[]

  @@unique([title, owner_id])
}

enum QuestionType {
  text
}

model Question {
  id         String       @id @default(uuid())
  type       QuestionType @default(text)
  form_id    String
  text       String
  created_at DateTime     @default(now())
  form       Form         @relation(fields: [form_id], references: [id], onDelete: Cascade)
  answer     Answer[]
}

model AnswersGroup {
  id         String   @id @default(uuid())
  form_id    String
  user_id    Int
  created_at DateTime @default(now())
  form       Form     @relation(fields: [form_id], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  items      Answer[]

  @@unique([form_id, user_id], name: "unique_key")
}

model Answer {
  id               String       @id @default(uuid())
  answers_group_id String
  question_id      String
  value            String
  created_at       DateTime     @default(now())
  answers_group    AnswersGroup @relation(fields: [answers_group_id], references: [id], onDelete: Cascade)
  question         Question     @relation(fields: [question_id], references: [id], onDelete: Cascade)
}
