#!/bin/bash

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç nginx

set -e

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —É—Ç–∏–ª–∏—Ç
check_dependencies() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    local tools=("docker" "lsof")
    local missing_tools=()
    
    for tool in "${tools[@]}"; do
        if ! command -v $tool &> /dev/null; then
            echo "‚ùå $tool –Ω–µ –Ω–∞–π–¥–µ–Ω"
            missing_tools+=($tool)
        else
            echo "‚úÖ $tool –Ω–∞–π–¥–µ–Ω"
        fi
    done
    
    if [ ${#missing_tools[@]} -gt 0 ]; then
        echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —É—Ç–∏–ª–∏—Ç—ã: ${missing_tools[*]}"
        echo "üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö: sudo apt install ${missing_tools[*]}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–æ—Ä—Ç–∞
check_and_free_port() {
    local port=$1
    local service_name=$2
    
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ $port ($service_name)..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ –ø–æ—Ä—Ç
    if lsof -i :$port > /dev/null 2>&1; then
        echo "‚ö†Ô∏è  –ü–æ—Ä—Ç $port –∑–∞–Ω—è—Ç. –ü–æ–ø—ã—Ç–∫–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è..."
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
        echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ –Ω–∞ –ø–æ—Ä—Ç—É $port:"
        lsof -i :$port
        
        # –ù–∞—Ö–æ–¥–∏–º PID –ø—Ä–æ—Ü–µ—Å—Å–∞, –∏—Å–ø–æ–ª—å–∑—É—é—â–µ–≥–æ –ø–æ—Ä—Ç
        local pid=$(lsof -ti :$port)
        
        if [ ! -z "$pid" ]; then
            echo "üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ $pid –Ω–∞ –ø–æ—Ä—Ç—É $port..."
            kill -TERM $pid 2>/dev/null || true
            
            # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
            sleep 2
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
            if kill -0 $pid 2>/dev/null; then
                echo "‚ö†Ô∏è  –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞..."
                kill -KILL $pid 2>/dev/null || true
                sleep 1
            fi
            
            # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
            if lsof -i :$port > /dev/null 2>&1; then
                echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –ø–æ—Ä—Ç $port"
                echo "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Ä—É—á–Ω—É—é: sudo lsof -ti :$port | xargs kill -9"
                return 1
            else
                echo "‚úÖ –ü–æ—Ä—Ç $port –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω"
            fi
        fi
    else
        echo "‚úÖ –ü–æ—Ä—Ç $port —Å–≤–æ–±–æ–¥–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–æ—Ä—Ç–æ–≤
check_ports() {
    local env=$1
    echo "üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–æ–≤ ($env)..."
    
    # –ë–∞–∑–æ–≤—ã–µ –ø–æ—Ä—Ç—ã –¥–ª—è –≤—Å–µ—Ö –æ–∫—Ä—É–∂–µ–Ω–∏–π
    local ports=("80" "8000" "5432" "29092")
    local services=("nginx" "backend" "postgres" "kafka")
    
    # –î–æ–±–∞–≤–ª—è–µ–º HTTPS –ø–æ—Ä—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è production
    if [ "$env" = "production" ]; then
        ports+=("443")
        services+=("nginx-ssl")
        echo "üîí Production —Ä–µ–∂–∏–º: –ø—Ä–æ–≤–µ—Ä—è–µ–º HTTPS –ø–æ—Ä—Ç 443"
    else
        echo "üîì Development —Ä–µ–∂–∏–º: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º HTTPS –ø–æ—Ä—Ç 443"
    fi
    
    for i in "${!ports[@]}"; do
        if ! check_and_free_port "${ports[$i]}" "${services[$i]}"; then
            echo "‚ùå –û—à–∏–±–∫–∞: –ø–æ—Ä—Ç ${ports[$i]} –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω"
            exit 1
        fi
    done
    
    echo "‚úÖ –í—Å–µ –ø–æ—Ä—Ç—ã –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
check_containers() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    local containers=("nginx" "backend" "postgres" "kafka" "zookeeper" "notify-service")
    local failed_containers=()
    
    for container in "${containers[@]}"; do
        if docker compose ps $container | grep -q "Up"; then
            echo "‚úÖ $container –∑–∞–ø—É—â–µ–Ω"
        else
            echo "‚ùå $container –Ω–µ –∑–∞–ø—É—â–µ–Ω"
            failed_containers+=($container)
        fi
    done
    
    if [ ${#failed_containers[@]} -gt 0 ]; then
        echo "‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏: ${failed_containers[*]}"
        echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker compose logs ${failed_containers[0]}"
        return 1
    fi
    
    echo "‚úÖ –í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
check_dependencies

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
if [ "$1" = "production" ]; then
    ENV="production"
    echo "–ó–∞–ø—É—Å–∫ –≤ production —Ä–µ–∂–∏–º–µ..."
else
    ENV="development"
    echo "–ó–∞–ø—É—Å–∫ –≤ development —Ä–µ–∂–∏–º–µ..."
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ä—Ç—ã
check_ports "$ENV"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose down

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ –ø–æ—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..."
check_ports "$ENV"

# –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã (–±–µ–∑ frontend)
echo "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker compose up -d --build

# –í production —Ä–µ–∂–∏–º–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º nginx
if [ "$ENV" = "production" ]; then
    echo "üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ nginx –¥–ª—è production..."
    docker compose build --no-cache nginx
    docker compose up -d nginx
    sleep 5
fi

# –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
check_containers

# –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ frontend
echo ""
echo "‚ö†Ô∏è  Frontend –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ Docker —Å–±–æ—Ä–∫–∏!"
echo "–î–ª—è –∑–∞–ø—É—Å–∫–∞ frontend –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "cd frontend && npm run dev"
echo ""

# –í production —Ä–µ–∂–∏–º–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
if [ "$ENV" = "production" ]; then
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –≤ production..."
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ nginx
    sleep 10
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
    if [ -d "/etc/letsencrypt/live/bugs-everywhere.ru" ]; then
        echo "SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–∞–π–¥–µ–Ω—ã. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ HTTPS..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–∫—Ä–∏–ø—Ç –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
        if docker compose exec nginx test -f /usr/local/bin/nginx-ssl-setup.sh; then
            echo "SSL —Å–∫—Ä–∏–ø—Ç –Ω–∞–π–¥–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É..."
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
            echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ SSL —Å–∫—Ä–∏–ø—Ç–∞:"
            docker compose exec nginx head -5 /usr/local/bin/nginx-ssl-setup.sh
            docker compose exec nginx /usr/local/bin/nginx-ssl-setup.sh
        else
            echo "‚ö†Ô∏è  SSL —Å–∫—Ä–∏–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ nginx"
            echo "–ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
            docker compose build nginx
            docker compose up -d nginx
            sleep 5
            
            # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞
            if docker compose exec nginx test -f /usr/local/bin/nginx-ssl-setup.sh; then
                echo "SSL —Å–∫—Ä–∏–ø—Ç –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏, –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É..."
                docker compose exec nginx /usr/local/bin/nginx-ssl-setup.sh
            else
                echo "‚ùå SSL —Å–∫—Ä–∏–ø—Ç –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª nginx/nginx-ssl-setup.sh"
            fi
        fi
    else
        echo "SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –†–∞–±–æ—Ç–∞–µ–º –≤ HTTP —Ä–µ–∂–∏–º–µ."
        echo "–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSL –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
        echo "sudo certbot certonly --standalone -d bugs-everywhere.ru"
        echo "–ó–∞—Ç–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ: ./deploy.sh production"
    fi
fi

echo "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "Backend API: http://localhost/api"
if [ "$ENV" = "production" ]; then
    echo "Production API: https://bugs-everywhere.ru/api"
fi
echo ""
echo "üéØ –î–ª—è –∑–∞–ø—É—Å–∫–∞ frontend:"
echo "   cd frontend && npm run dev"
echo "   –ó–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:3000" 