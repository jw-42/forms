"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isCustomMediaToken = exports.isAdaptiveFlatToken = exports.isGroupToken = exports.isColor = exports.isString = void 0;
var customMedia_1 = require("../../../themeProcessors/customMedia/customMedia");
var stringKeys = ['themeName', 'themeNameBase', 'themeInheritsFrom'];
function isString(token, key) {
    return typeof token === 'string' && stringKeys.includes(key);
}
exports.isString = isString;
function isColor(token) {
    if (typeof token !== 'object') {
        return false;
    }
    return token.normal !== undefined;
}
exports.isColor = isColor;
function isGroupToken(token) {
    if (typeof token !== 'object') {
        return false;
    }
    if (isAdaptiveFlatToken(token)) {
        return false;
    }
    return !isColor(token);
}
exports.isGroupToken = isGroupToken;
function isAdaptiveFlatToken(token) {
    if (typeof token !== 'object') {
        return false;
    }
    return (token.regular !== undefined &&
        typeof token.regular !== 'object');
}
exports.isAdaptiveFlatToken = isAdaptiveFlatToken;
var allCustomMediaKeys = Object.keys((0, customMedia_1.processCustomMedia)({
    breakpoints: {
        touch: {
            breakpoint: 0,
            adaptiveValue: 'compactX',
        },
        tablet: {
            breakpoint: 768,
            adaptiveValue: 'compact',
        },
        desktopS: {
            breakpoint: 1000,
            adaptiveValue: 'regular',
        },
        desktopM: {
            breakpoint: 1300,
            adaptiveValue: 'large',
        },
        desktopL: {
            breakpoint: 1600,
            adaptiveValue: 'largeX',
        },
        desktopXL: {
            breakpoint: 2200,
            adaptiveValue: 'largeXX',
        },
    },
}));
function isCustomMediaToken(key) {
    return typeof key === 'string' && allCustomMediaKeys.includes(key);
}
exports.isCustomMediaToken = isCustomMediaToken;
