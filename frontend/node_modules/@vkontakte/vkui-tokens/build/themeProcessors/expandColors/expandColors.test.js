"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var globals_1 = require("@jest/globals");
var expandColors_1 = require("./expandColors");
(0, globals_1.describe)('expandColors', function () {
    (0, globals_1.it)('should return null if colors not specified', function () {
        var colorsTheme = {
            colorsScheme: 'light',
        };
        (0, globals_1.expect)((0, expandColors_1.getExpandedThemeColors)(colorsTheme)).toStrictEqual(null);
    });
    (0, globals_1.it)('should return null if colorsScheme not specified', function () {
        var colorsTheme = {
            colors: {
                colorError: '#F00',
            },
        };
        (0, globals_1.expect)((0, expandColors_1.getExpandedThemeColors)(colorsTheme)).toStrictEqual(null);
    });
    (0, globals_1.it)('should expand colors with states', function () {
        var colorsTheme = {
            colorsScheme: 'light',
            colors: {
                colorError: '#F00',
            },
        };
        var result = {
            colorsScheme: 'light',
            colorError: {
                active: '#EB0105',
                hover: '#F50102',
                normal: '#F00',
            },
        };
        (0, globals_1.expect)((0, expandColors_1.getExpandedThemeColors)(colorsTheme)).toStrictEqual(result);
    });
    (0, globals_1.it)('should expand colors with states dark scheme', function () {
        var colorsTheme = {
            colorsScheme: 'dark',
            colors: {
                colorError: '#3e3333',
            },
        };
        var result = {
            colorsScheme: 'dark',
            colorError: {
                active: '#4D4343',
                hover: '#463B3B',
                normal: '#3e3333',
            },
        };
        (0, globals_1.expect)((0, expandColors_1.getExpandedThemeColors)(colorsTheme)).toStrictEqual(result);
    });
    (0, globals_1.it)('should expand transparent colors', function () {
        var colorsTheme = {
            colorsScheme: 'light',
            colors: {
                colorTransparent: 'transparent',
            },
        };
        var result = {
            colorTransparent: {
                active: 'rgba(0, 16, 61, 0.08)',
                hover: 'rgba(0, 16, 61, 0.04)',
                normal: 'transparent',
            },
            colorsScheme: 'light',
        };
        (0, globals_1.expect)((0, expandColors_1.getExpandedThemeColors)(colorsTheme)).toStrictEqual(result);
    });
    (0, globals_1.it)('should expand transparent colors dark scheme', function () {
        var colorsTheme = {
            colorsScheme: 'dark',
            colors: {
                colorTransparent: 'transparent',
            },
        };
        var result = {
            colorTransparent: {
                active: 'rgba(255, 255, 255, 0.08)',
                hover: 'rgba(255, 255, 255, 0.04)',
                normal: 'transparent',
            },
            colorsScheme: 'dark',
        };
        (0, globals_1.expect)((0, expandColors_1.getExpandedThemeColors)(colorsTheme)).toStrictEqual(result);
    });
    (0, globals_1.it)('should not expand colors with already exists states', function () {
        var colorsTheme = {
            colorsScheme: 'light',
            colors: {
                colorError: {
                    active: '#FFF',
                    hover: '#F0F',
                    normal: '#F00',
                },
            },
        };
        var result = {
            colorsScheme: 'light',
            colorError: {
                active: '#FFF',
                hover: '#F0F',
                normal: '#F00',
            },
        };
        (0, globals_1.expect)((0, expandColors_1.getExpandedThemeColors)(colorsTheme)).toStrictEqual(result);
    });
});
