"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var globals_1 = require("@jest/globals");
var pixelifyValues_1 = require("./pixelifyValues");
(0, globals_1.describe)('pixelifyValues', function () {
    (0, globals_1.describe)('general', function () {
        (0, globals_1.it)('should change type', function () {
            var theme = {
                themeType: 'root',
            };
            var pixelifyTheme = {
                themeType: 'pixelify',
            };
            (0, globals_1.expect)((0, pixelifyValues_1.pixelifyValues)(theme)).toStrictEqual(pixelifyTheme);
        });
        (0, globals_1.it)('should pixelify flat numbers', function () {
            var theme = {
                x1: 4,
                x2: 8,
            };
            var pixelifyTheme = {
                x1: '4px',
                x2: '8px',
            };
            (0, globals_1.expect)((0, pixelifyValues_1.pixelifyValues)(theme)).toStrictEqual(pixelifyTheme);
        });
        (0, globals_1.it)('should pixelify viewport values', function () {
            var theme = {
                sizePopupBasePadding: {
                    compact: 16,
                    regular: 20,
                },
            };
            var pixelifyTheme = {
                sizePopupBasePadding: {
                    compact: '16px',
                    regular: '20px',
                },
            };
            (0, globals_1.expect)((0, pixelifyValues_1.pixelifyValues)(theme)).toStrictEqual(pixelifyTheme);
        });
        (0, globals_1.it)('should pixelify float numbers', function () {
            var theme = {
                x1: 1,
                x2: 0.5,
                x3: 0.33,
            };
            var pixelifyTheme = {
                x1: '1px',
                x2: '0.5px',
                x3: '0.33px',
            };
            (0, globals_1.expect)((0, pixelifyValues_1.pixelifyValues)(theme)).toStrictEqual(pixelifyTheme);
        });
        (0, globals_1.it)('should correctly pixelify fonts (exclude weight)', function () {
            var theme = {
                fontH1: {
                    compact: {
                        fontSize: 24,
                        lineHeight: '32px',
                        fontWeight: 700,
                        fontFamily: 'MailSans, Helvetica, Arial, sans-serif',
                        marginBottom: 16,
                    },
                    regular: {
                        fontSize: 24,
                        lineHeight: '32px',
                        fontWeight: 700,
                        fontFamily: 'MailSans, Helvetica, Arial, sans-serif',
                        marginBottom: 16,
                    },
                },
            };
            var pixelifyTheme = {
                fontH1: {
                    compact: {
                        fontSize: '24px',
                        lineHeight: '32px',
                        fontWeight: 700,
                        fontFamily: 'MailSans, Helvetica, Arial, sans-serif',
                        marginBottom: '16px',
                    },
                    regular: {
                        fontSize: '24px',
                        lineHeight: '32px',
                        fontWeight: 700,
                        fontFamily: 'MailSans, Helvetica, Arial, sans-serif',
                        marginBottom: '16px',
                    },
                },
            };
            (0, globals_1.expect)((0, pixelifyValues_1.pixelifyValues)(theme)).toStrictEqual(pixelifyTheme);
        });
        (0, globals_1.it)('should correctly pixelify custom fontWeight tokens', function () {
            (0, globals_1.expect)((0, pixelifyValues_1.pixelifyValues)({ fontWeightAccent1: 700 })).toEqual({
                fontWeightAccent1: 700,
            });
        });
        (0, globals_1.it)('should correctly pixelify zIndex', function () {
            (0, globals_1.expect)((0, pixelifyValues_1.pixelifyValues)({ zIndexModal: 100 })).toEqual({
                zIndexModal: 100,
            });
        });
        (0, globals_1.it)('should correctly pixelify opacity', function () {
            (0, globals_1.expect)((0, pixelifyValues_1.pixelifyValues)({ opacityDisable: 1, opacityDisableAccessibility: 0.5 })).toEqual({
                opacityDisable: 1,
                opacityDisableAccessibility: 0.5,
            });
        });
        (0, globals_1.it)('should correctly pixelify tone', function () {
            (0, globals_1.expect)((0, pixelifyValues_1.pixelifyValues)({ toneValueActive: 0.1 })).toEqual({
                toneValueActive: 0.1,
            });
        });
    });
});
