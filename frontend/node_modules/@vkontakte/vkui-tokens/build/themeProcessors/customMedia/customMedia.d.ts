import { Breakpoints } from '../../../interfaces/general/tools';
import { CustomMediaByViewport, CustomMediaByViewportUnion } from '../../../interfaces/general/tools/customMedia';
import { DefaultViewports, Viewports, ViewportsTuple } from '../../../interfaces/general/tools/viewports';
export declare const getUsingViewports: <Vt extends ViewportsTuple>(breakpoints: { [key in Vt[number]]: {
    breakpoint: key extends Vt[0] ? 0 : number;
    adaptiveValue: keyof import("../../../interfaces/general/tools").Adaptive<any>;
}; }) => Vt;
export declare const getCustomMediaKey: <Vt extends ViewportsTuple = DefaultViewports>(layoutName: Viewports, rule?: 'to' | 'from') => CustomMediaByViewportUnion<Vt>;
export declare function processCustomMedia<Vt extends ViewportsTuple = DefaultViewports>({ breakpoints, }: Pick<Breakpoints<Vt>, 'breakpoints'>): CustomMediaByViewport<Vt>;
