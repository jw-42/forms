"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var globals_1 = require("@jest/globals");
var extractViewports_1 = require("./extractViewports");
(0, globals_1.describe)('extractViewports', function () {
    (0, globals_1.it)('should work without breakpoints: touch', function () {
        var testBreakpoints = {
            breakpoints: {
                touch: {
                    adaptiveValue: 'regular',
                    breakpoint: 0,
                },
            },
        };
        (0, globals_1.expect)((0, extractViewports_1.extractViewports)(testBreakpoints)).toStrictEqual(['touch']);
    });
    (0, globals_1.it)('should work without breakpoints: desktopM', function () {
        var testBreakpoints = {
            breakpoints: {
                desktopM: {
                    adaptiveValue: 'regular',
                    breakpoint: 0,
                },
            },
        };
        (0, globals_1.expect)((0, extractViewports_1.extractViewports)(testBreakpoints)).toStrictEqual(['desktopM']);
    });
    (0, globals_1.it)('should work with default breakpoints', function () {
        var testBreakpoints = {
            breakpoints: {
                touch: {
                    breakpoint: 0,
                    adaptiveValue: 'compact',
                },
                desktopS: {
                    breakpoint: 768,
                    adaptiveValue: 'regular',
                },
            },
        };
        (0, globals_1.expect)((0, extractViewports_1.extractViewports)(testBreakpoints)).toStrictEqual(['touch', 'desktopS']);
    });
    (0, globals_1.it)('should work with Custom breakpoints', function () {
        var testBreakpoints = {
            breakpoints: {
                touch: {
                    breakpoint: 0,
                    adaptiveValue: 'compact',
                },
                desktopS: {
                    breakpoint: 400,
                    adaptiveValue: 'regular',
                },
                desktopM: {
                    breakpoint: 500,
                    adaptiveValue: 'large',
                },
                desktopL: {
                    breakpoint: 700,
                    adaptiveValue: 'largeX',
                },
            },
        };
        (0, globals_1.expect)((0, extractViewports_1.extractViewports)(testBreakpoints)).toStrictEqual(['touch', 'desktopS', 'desktopM', 'desktopL']);
    });
});
