"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getStateFunctions = void 0;
var color_1 = __importDefault(require("color"));
var expandColors_1 = require("../themeProcessors/expandColors/expandColors");
function getStateFunctions(theme) {
    var colorState = expandColors_1.colorStateMap[theme.colorsScheme];
    return {
        stateHover: function (colorHover) {
            if (colorHover === 'transparent') {
                return "rgba(".concat(colorState, ",").concat(theme.toneValueHover, ")");
            }
            return (0, color_1.default)(colorHover).mix((0, color_1.default)(colorState), theme.toneValueHover).hex();
        },
        stateActive: function (colorActive) {
            if (colorActive === 'transparent') {
                return "rgba(".concat(colorState, ",").concat(theme.toneValueActive, ")");
            }
            return (0, color_1.default)(colorActive).mix((0, color_1.default)(colorState), theme.toneValueActive).hex();
        },
        stateFocus: function (colorFocus) {
            if (colorFocus === 'transparent') {
                return "rgba(".concat(colorState, ",").concat(theme.toneValueFocus, ")");
            }
            return (0, color_1.default)(colorFocus).mix((0, color_1.default)(colorState), theme.toneValueFocus).hex();
        },
        stateDisabled: function (colorDisabled) {
            return (0, color_1.default)(colorDisabled).alpha(theme.opacityDisable).rgb().string();
        },
    };
}
exports.getStateFunctions = getStateFunctions;
