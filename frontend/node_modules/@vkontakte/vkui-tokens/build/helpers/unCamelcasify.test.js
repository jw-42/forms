"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var globals_1 = require("@jest/globals");
var unCamelcasify_1 = require("./unCamelcasify");
(0, globals_1.describe)('unCamelcasify', function () {
    (0, globals_1.it)('should correctly work with empty string', function () {
        (0, globals_1.expect)((0, unCamelcasify_1.unCamelcasify)('')).toBe('');
    });
    (0, globals_1.it)('should work with Capitalize world', function () {
        (0, globals_1.expect)((0, unCamelcasify_1.unCamelcasify)('Hello')).toBe('hello');
    });
    (0, globals_1.it)('should convert two words string', function () {
        (0, globals_1.expect)((0, unCamelcasify_1.unCamelcasify)('desktopS')).toBe('desktop-s');
    });
    (0, globals_1.it)('should convert two words string with number prefix', function () {
        (0, globals_1.expect)((0, unCamelcasify_1.unCamelcasify)('desktop3S')).toBe('desktop-3s');
    });
    (0, globals_1.it)('should convert many words string', function () {
        (0, globals_1.expect)((0, unCamelcasify_1.unCamelcasify)('hello1SWorldMy2XsFriend3Xs')).toBe('hello-1s-world-my-2xs-friend-3xs');
        (0, globals_1.expect)((0, unCamelcasify_1.unCamelcasify)('sizeGridColumn1X2')).toBe('size-grid-column1-x2');
        (0, globals_1.expect)((0, unCamelcasify_1.unCamelcasify)('size2Xs3Regular2L')).not.toBe('size-2x-3regular-2l');
    });
});
