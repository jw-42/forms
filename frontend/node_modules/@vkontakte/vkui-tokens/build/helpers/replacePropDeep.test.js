"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var globals_1 = require("@jest/globals");
var replacePropDeep_1 = require("./replacePropDeep");
(0, globals_1.describe)('replacePropDeep', function () {
    var mapReplace = {
        fontFamily: 'lol',
        fontWeight: 666,
    };
    (0, globals_1.it)('should return new object', function () {
        var object = {};
        (0, globals_1.expect)((0, replacePropDeep_1.replacePropDeep)(object, mapReplace)).not.toBe(object);
    });
    (0, globals_1.it)('should work with empty', function () {
        var object = {};
        (0, globals_1.expect)((0, replacePropDeep_1.replacePropDeep)(object, mapReplace)).toStrictEqual({});
    });
    (0, globals_1.it)('should not touch other vars', function () {
        var object = { opacityDisable: 0.5 };
        (0, globals_1.expect)((0, replacePropDeep_1.replacePropDeep)(object, mapReplace)).toStrictEqual({
            opacityDisable: 0.5,
        });
    });
    (0, globals_1.it)('should replace flat values', function () {
        var object = { fontFamily: 'kek' };
        (0, globals_1.expect)((0, replacePropDeep_1.replacePropDeep)(object, mapReplace)).toStrictEqual({
            fontFamily: 'lol',
        });
    });
    (0, globals_1.it)('should replace complex values', function () {
        var object = {
            fontFamily: 'kek',
            kek: {
                fontWeight: 5302,
            },
        };
        (0, globals_1.expect)((0, replacePropDeep_1.replacePropDeep)(object, mapReplace)).toStrictEqual({
            fontFamily: 'lol',
            kek: {
                fontWeight: 666,
            },
        });
    });
});
