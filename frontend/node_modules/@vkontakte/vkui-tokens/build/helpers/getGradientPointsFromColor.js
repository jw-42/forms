"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGradientPointsFromColor = exports.makeGradientPointRaw = exports.defaultOpacityPoints = void 0;
var color_1 = __importDefault(require("color"));
var extractVarsNames_1 = require("../themeProcessors/extractVarsNames/extractVarsNames");
var opacityMap_json_1 = __importDefault(require("./opacityMap.json"));
exports.defaultOpacityPoints = opacityMap_json_1.default;
function makeGradientPointRaw(value, key, prefix) {
    return function () { return ({
        value: value,
        key: key,
        prefix: prefix,
    }); };
}
exports.makeGradientPointRaw = makeGradientPointRaw;
function getGradientPointsFromColor(colorArg, opacityMultiplier, opacityPoints) {
    if (opacityMultiplier === void 0) { opacityMultiplier = 1; }
    if (opacityPoints === void 0) { opacityPoints = exports.defaultOpacityPoints; }
    var gradientPointData = typeof colorArg === 'function' ? colorArg() : { value: colorArg };
    var colorRGB = (0, color_1.default)(gradientPointData.value).rgb().array().slice(0, 3).join(', ');
    var colorAlpha = (0, color_1.default)(gradientPointData.value).alpha();
    return opacityPoints
        .map(function (_a) {
        var pointOpacity = _a[0], pointCoordinate = _a[1];
        var targetOpacity = colorAlpha * pointOpacity;
        var colorValue = "rgba(".concat(colorRGB, ", ").concat(Math.round(targetOpacity * opacityMultiplier * 1000) / 1000, ")");
        if (typeof gradientPointData.key === 'string') {
            var tokenName = (0, extractVarsNames_1.getVariableName)({
                key: gradientPointData.key,
                prefix: gradientPointData.prefix,
            });
            return "var(".concat(tokenName, ", ").concat(colorValue, ") ").concat(pointCoordinate, "%");
        }
        return "".concat(colorValue, " ").concat(pointCoordinate, "%");
    })
        .join(', ');
}
exports.getGradientPointsFromColor = getGradientPointsFromColor;
