"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var globals_1 = require("@jest/globals");
var flatifyTheme_1 = require("./flatifyTheme");
(0, globals_1.describe)('flatifyTheme', function () {
    (0, globals_1.it)('should return new object', function () {
        var theme = {};
        (0, globals_1.expect)((0, flatifyTheme_1.flatifyTheme)(theme)).not.toBe(theme);
    });
    (0, globals_1.it)('should work with empty', function () {
        var theme = {};
        (0, globals_1.expect)((0, flatifyTheme_1.flatifyTheme)(theme)).toStrictEqual({});
    });
    (0, globals_1.it)('should not touch flat vars', function () {
        var theme = { opacityDisable: 0.5 };
        (0, globals_1.expect)((0, flatifyTheme_1.flatifyTheme)(theme)).toStrictEqual({ opacityDisable: 0.5 });
    });
    (0, globals_1.it)('should not touch colors', function () {
        var theme = {
            colors: { colorTextPrimary: 'blue' },
        };
        (0, globals_1.expect)((0, flatifyTheme_1.flatifyTheme)(theme)).toStrictEqual({
            colors: { colorTextPrimary: 'blue' },
        });
    });
    (0, globals_1.it)('should change adaptive flat values', function () {
        var theme = {
            sizeArrow: {
                regular: 9,
                compact: 3,
                large: 15,
            },
            sizeIconUI: {
                regular: 17,
                compact: 12,
            },
        };
        (0, globals_1.expect)((0, flatifyTheme_1.flatifyTheme)(theme)).toStrictEqual({
            sizeArrow: {
                regular: 9,
            },
            sizeIconUI: {
                regular: 17,
            },
        });
    });
    (0, globals_1.it)('should get oportunity to change adaptive states for removing', function () {
        var theme = {
            sizeArrow: {
                regular: 9,
                compact: 3,
                large: 15,
            },
            sizeIconUI: {
                regular: 17,
                compact: 12,
            },
        };
        (0, globals_1.expect)((0, flatifyTheme_1.flatifyTheme)(theme, ['compact'])).toStrictEqual({
            sizeArrow: {
                regular: 9,
                large: 15,
            },
            sizeIconUI: {
                regular: 17,
            },
        });
    });
    (0, globals_1.it)('should work with adaptive complex values', function () {
        var theme = {
            fontTitle1: {
                regular: {
                    fontSize: 16,
                    lineHeight: 20,
                    fontFamily: 'kek',
                    fontWeight: 444,
                },
                compact: {
                    fontSize: 14,
                    lineHeight: 15,
                },
            },
        };
        (0, globals_1.expect)((0, flatifyTheme_1.flatifyTheme)(theme)).toStrictEqual({
            fontTitle1: {
                regular: {
                    fontSize: 16,
                    lineHeight: 20,
                    fontFamily: 'kek',
                    fontWeight: 444,
                },
            },
        });
    });
});
